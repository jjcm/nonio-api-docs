mixin endpoint
  .endpoint&attributes(attributes)
    .content
      if block
        block

mixin auth
  h3 Requirements
  ul 
    li 
      h4 Authentication
      div With no auth, should return
      :code(javascript)
        401 Unauthorized

block content
  h1 Posts API
  .endpoints
    +endpoint#get_posts
      h2 <span>GET</span> /posts
      p Returns 100 posts.
      h3 Parameters
      .parameter
        .param ?offset=<span>NUMBER</span>
        p Offsets the responses by a set number.
      .parameter
        .param ?sort=<span class="default">popular</span>|<span>top</span>|<span>new</span>
        p Returns posts sorted by a particular algorithm.
        ul 
          li 
            h4 popular <span>default</span>
            p Posts are sorted by score, within a time span between now and the requesting user's last login, or 24 hours, whichever is longer.
          li 
            h4 new
            p Posts are sorted by date. Newest first.
          li 
            h4 top
            p Posts are sorted by score. Highest first.

      .parameter
        .param ?time=<span class="default">all</span>|<span>day</span>|<span>week</span>|<span>month</span>|<span>year</span>
        p Only returns posts that were created within a specific time period.
        ul 
          li 
            h4 all <span>default</span>
            p No time constraints.
          li 
            h4 day
            p Only returns posts created in the last day.
          li 
            h4 week
            p Only returns posts created in the last week.
          li 
            h4 month
            p Only returns posts created in the last month.
          li 
            h4 year
            p Only returns posts created in the last year.

      .parameter
        .param ?tag=<span class="default">TAG</span>
        p Only returns results that match a specific tag. Multiple tags can be listed by separating tags with a <span>+</span>. If more than one tag is listed, it will return posts that match any of the tags. As an example:
        :code(javascript)
          /posts?tag=funny+wtf
        p will return 100 posts that either have a tag of funny or wtf.

      .parameter
        .param ?user=<span class="default">USER</span>
        p Only returns results posts that were made by a specific user.

      +auth

      h3 Example response
      :code(javascript)
        {
          posts: [
            {
              "id": 2,
              "title": "test post",
              "user": "wombodombo",
              "time": "1577171754000",
              "url": "this_is_crazy",
              "link": "", //optional
              "content": "{\"ops\":[{\"insert\":\"This is a cool photo.\\n\"}]}", //quilljs formatted content
              "type": "image",
              "score": 148,
              "commentCount": 21,
              "width": 1920, //will appear for video and image content
              "height": 1080, //will appear for video and image content
              "tags": [
                {
                  "tag": "funny",
                  "score": 10,
                },
                {
                  "tag": "meme",
                  "score": 7,
                },
                {
                  "tag": "image",
                  "score": 4,
                }
              ]
            },

            // ...etc

          ]
        }

      +endpoint#get_view_post
        h2 <span>GET</span> /post/view/:url
        p.
          Returns the data for a single post, referenced by its url.
          The date for the tags is the date the postTag association was first created.

        h3 Requirements
        p None. Should be available publicly

        h3 Example response
        :code(javascript)
          {
            "id": 2,
            "title": "test post",
            "user": "wombodombo",
            "time": "1577171754000",
            "url": "this_is_crazy",
            "link": "", //optional
            "content": "{\"ops\":[{\"insert\":\"This is a cool photo.\\n\"}]}", //quilljs formatted content
            "type": "image",
            "score": 148,
            "commentCount": 21,
            "width": 1920, //will appear for video and image content
            "height": 1080, //will appear for video and image content
            "tags": [
              {
                "tag": "funny",
                "score": 10,
              },
              {
                "tag": "meme",
                "score": 7,
              },
              {
                "tag": "image",
                "score": 4,
              }
            ]
          }

      +endpoint#post_post_create
        h2 <span>POST</span> /post/create
        p.
          Accepts a JSON payload to create a new post in the database

        h3 Requirements
        ul
          li
            h4 Authentication
            div With no auth, should return
            :code(javascript)
              401 Unauthorized

        h3 Example payload
        :code(javascript)
          {
            "title": "My Cool Post!",
            "url": "my-neato-post-wow",
            "content": "This is the long form content for this post...",
            "type": "blog"
          }

        h3 Example response
        :code(javascript)
          {
              "title": "My Cool Post!",
              "user": "lapubell",
              "time": "1577171754000",
              "url": "my-neto-post-wow",
              "tags": []
          }


      +endpoint#get_post_url_is_available
        h2 <span>GET</span> /post/url-is-available/:url
        p.
          Returns a boolean based on if the requested URL is available

        h3 Requirements
        p None. Should be available publicly

        h3 Example response
        :code(javascript)
          true

      +endpoint#post_post_parse_external_url
        h2 <span>POST</span> /post/parse-external-url
        p.
          Returns a summary of the opengraph data for a given URL, used for populating the image, title and description of link post submissions.

        +auth

        h3 Example payload
        :code(javascript)
          {
            "url": "https://youtube.com"
          }

        h3 Example response
        :code(javascript)
          {
              "title": "YouTube",
              "description": "Enjoy the videos and music you love, upload original content, and share it all with friends, family, and the world on YouTube.",
              "image": "https://www.youtube.com/img/desktop/yt_1200.png"
          }
mixin auth
  h3 Requirements
  ul 
    li 
      h4 Authentication
      div With no auth, should return
      :code(javascript)
        401 Unauthorized

block content
  h1 Posts API
  .endpoint#get_posts
    h2 <span>GET</span> /posts
    p Returns 100 posts.
    h3 Parameters
    .parameter
      .param ?offset=<span>NUMBER</span>
      p Offsets the responses by a set number.
    .parameter
      .param ?sort=<span class="default">popular</span>|<span>top</span>|<span>new</span>
      p Returns posts sorted by a particular algorithm.
      ul 
        li 
          h4 popular <span>default</span>
          p Posts are sorted by score, within a time span between now and the requesting user's last login, or 24 hours, whichever is longer.
        li 
          h4 new
          p Posts are sorted by date. Newest first.
        li 
          h4 top
          p Posts are sorted by score. Highest first.

    .parameter
      .param ?time=<span class="default">all</span>|<span>day</span>|<span>week</span>|<span>month</span>|<span>year</span>
      p Only returns posts that were created within a specific time period.
      ul 
        li 
          h4 all <span>default</span>
          p Posts are sorted by score, within a time span between now and the requesting user's last login, or 24 hours, whichever is longer.
        li 
          h4 day
          p Only returns posts created in the last day.
        li 
          h4 week
          p Only returns posts created in the last week.
        li 
          h4 month
          p Only returns posts created in the last month.
        li 
          h4 year
          p Only returns posts created in the last year.

    .parameter
      .param ?tag=<span class="default">TAG</span>
      p Only returns results that match a specific tag. Multiple tags can be listed by separating tags with a <span>+</span>. If more than one tag is listed, it will return posts that match any of the tags. As an example:
      :code(javascript)
        /posts?tag=funny+wtf
      p will return 100 posts that either have a tag of funny or wtf.

    .parameter
      .param ?user=<span class="default">USER</span>
      p Only returns results posts that were made by a specific user.

    +auth
    

  .endpoint#get_post
    h2 <span>GET</span> /post/:url
    p.
      [IN API] - Returns the data for a single post, referenced by its url.
      The date for the tags is the date the postTag association was first created.

    h3 Requirements
    p None. Should be available publicly

    h3 Example response
    :code(javascript)
      {
        "title": "test post",
        "url": "this_is_crazy",
        "user": "wombodombo",
        "score": 148,
        "date": "2018-02-14 8:43pm",
        "content": "This is a cool photo I took of my cat way back when",
        "type": "image",
        "tags": [
          {
            "tag": "funny",
            "upvotes": 92,
            "downvotes": 0,
            "date": "2018-02-14 8:43pm"
          },
          {
            "tag": "meme",
            "upvotes": 38,
            "downvotes": 0,
            "date": "2018-02-14 10:44pm"
          },
          {
            "tag": "image",
            "upvotes": 18,
            "downvotes": 0,
            "date": "2018-02-14 10:44pm"
          }
      }
      

  .endpoint#post_post_create
    h2 <span>POST</span> /post/create
    p.
      [IN API] - Accepts a JSON payload to create a new post in the database

    h3 Requirements
    ul
      li
        h4 Authentication
        div With no auth, should return
        :code(javascript)
          401 Unauthorized

    h3 Example payload
    :code(javascript)
      {
        "title": "My Cool Post!",
        "url": "my-neato-post-wow",
        "content": "This is the long form content for this post...",
        "type": "blog"
      }

    h3 Example response
    :code(javascript)
      {
          "title": "My Cool Post!",
          "user": "lapubell",
          "time": "2019-11-04 04:11PM",
          "url": "my-neto-post-wow",
          "tags": []
      }


  .endpoint
    h2 <span>GET</span> /posts/url-is-available/:url
    p.
      [IN API] - Returns a boolean based on if the requested URL is available

    h3 Requirements
    p None. Should be available publicly

    h3 Example response
    :code(javascript)
      true


  .endpoint
    h2 <span>GET</span> /posts
    p.
      [IN API] - Should return 100 posts sorted by score, within a time span between now and the requesting user's last login,
      or 24 hours, whichever is longer.
    h3 Parameters
    .param ?offset=<span>NUMBER</span>
    p Offsets the responses by a set number.

    h3 Requirements
    ul
      li
        h4 Authentication
        div With no auth, should return
        :code(javascript)
          401 Unauthorized

    h3 Example response
    :code(javascript)
      {
        posts: [
          {
            "title": "test post",
            "url": "this_is_crazy",
            "user": "wombodombo",
            "score": 148,
            "date": "2018-02-14 8:43pm",
            "content": "This is a cool photo I took of my cat way back when",
            "type": "image",
            "tags": [
              {
                "tag": "funny",
                "upvotes": 92,
                "downvotes": 0,
                "date": "2018-02-14 8:43pm"
              },
              {
                "tag": "meme",
                "upvotes": 38,
                "downvotes": 0,
                "date": "2018-02-14 10:44pm"
              },
              {
                "tag": "image",
                "upvotes": 18,
                "downvotes": 0,
                "date": "2018-02-14 10:44pm"
              }
            ]
          },
          {
            "title": "So and so gets elected",
            "url": "wow-such-election",
            "user": "mrWilson",
            "score": 132,
            "date": "2018-02-14 10:02pm",
            "content": "Some longform writing content blah blah blah...",
            "type": "blog",
            "tags": [
              {
                "tag": "news",
                "upvotes": 92,
                "downvotes": 0,
                "date": "2018-02-14 10:02pm"
              },
              {
                "tag": "politics",
                "upvotes": 38,
                "downvotes": 0,
                "date": "2018-02-14 10:44pm"
              }
            ]
          },

          ...etc

        ]
      }


  .endpoint
    h2 <span>GET</span> /posts/new
    p.
      [IN API] - Should return the most recent 100 posts, sorted by date.
    h3 Parameters
    .param ?offset=<span>NUMBER</span>
    p Offsets the responses by a set number.

    h3 Requirements
    ul
      li
        h4 Authentication
        div With no auth, should return
        :code(javascript)
          401 Unauthorized

    h3 Example response
    :code(javascript)
      {
        posts: [
          {
            "title": "test post",
            "url": "this_is_crazy",
            "user": "mrWilson",
            "score": 4,
            "date": "2018-02-14 8:43pm",
            "content": "A photo I took of my cat",
            "type": "image",
            "tags": [
              {
                "tag": "funny",
                "upvotes": 92,
                "downvotes": 0,
                "date": "2018-02-14 8:43pm"
              },
              {
                "tag": "meme",
                "upvotes": 38,
                "downvotes": 0,
                "date": "2018-02-14 10:44pm"
              },
              {
                "tag": "image",
                "upvotes": 18,
                "downvotes": 0,
                "date": "2018-02-14 10:44pm"
              }
            ]
          },
          {
            "title": "So and so gets elected",
            "url": "wow-such-elction",
            "user": "mrWilson",
            "score": 3,
            "date": "2018-02-14 8:42pm",
            "content": "Some longform writing content blah blah blah...",
            "type": "blog",
            "tags": [
              {
                "tag": "news",
                "upvotes": 92,
                "downvotes": 0,
                "date": "2018-02-14 8:42pm"
              },
              {
                "tag": "politics",
                "upvotes": 38,
                "downvotes": 0,
                "date": "2018-02-14 10:44pm"
              }
            ]
          },

          ...etc

        ]
      }


  .endpoint
    h2 <span>GET</span> /posts/top
    p.
      Should return 100 posts sorted by score, highest score first

    h3 Subpaths
    ul
      li
        .path /posts/top/<span>day</span>
        p Only returns posts within the last day.
      li
        .path /posts/top/<span>week</span>
        p Only returns posts within the last week.
      li
        .path /posts/top/<span>month</span>
        p Only returns posts within the last month.
      li
        .path /posts/top/<span>year</span>
        p Only returns posts within the last year.

    h3 Parameters
    .param ?offset=<span>NUMBER</span>
    p Offsets the responses by a set number.

    h3 Requirements
    ul
      li
        h4 Authentication
        div With no auth, should return
        :code(javascript)
          401 Unauthorized

    h3 Example response
    :code(javascript)
      {
        posts: [
          {
            "title": "test post",
            "url": "this_is_crazy",
            "user": "mrWilson",
            "score": 1482,
            "date": "2017-02-14 8:43pm",
            "content": "Waow this is so crazy check it out",
            "type": "image",
            "tags": [
              {
                "tag": "funny",
                "upvotes": 92,
                "downvotes": 0,
                "date": "2018-02-14 8:43pm"
              },
              {
                "tag": "meme",
                "upvotes": 38,
                "downvotes": 0,
                "date": "2018-02-14 10:44pm"
              },
              {
                "tag": "image",
                "upvotes": 18,
                "downvotes": 0,
                "date": "2018-02-14 10:44pm"
              }
          },
          {
            "title": "So and so gets elected",
            "url": "suchelectionwow",
            "user": "mrWilson",
            "score": 1328,
            "date": "2018-02-14 8:42pm",
            "content": "Some longform writing content blah blah blah...",
            "type": "blog",
            "tags": [
              {
                "tag": "news",
                "upvotes": 92,
                "downvotes": 0,
                "date": "2018-02-14 8:42pm"
              },
              {
                "tag": "politics",
                "upvotes": 38,
                "downvotes": 0,
                "date": "2018-02-14 10:44pm"
              }
            ]
          },

          ...etc

        ]
      }


  .endpoint
    h2 <span>GET</span> /posts/user/:user
    p.
      Should return 100 posts created by a specific user.
    h3 Parameters
    .param ?offset=<span>NUMBER</span>
    p Offsets the responses by a set number.

    h3 Requirements
    ul
      li
        h4 Authentication
        div With no auth, should return
        :code(javascript)
          401 Unauthorized

    h3 Example response
    :code(javascript)
      {
        posts: [
          {
            "title": "test post",
            "url": "this_is_crazy",
            "user": "lapubell",
            "score": 148,
            "date": "2018-02-14 8:43pm",
            "content": "This is the craziest thing youve seen all day",
            "type": "image",
            "tags": [
              {
                "tag": "funny",
                "upvotes": 92,
                "downvotes": 0,
                "date": "2018-02-14 8:43pm"
              },
              {
                "tag": "meme",
                "upvotes": 38,
                "downvotes": 0,
                "date": "2018-02-14 10:44pm"
              },
              {
                "tag": "image",
                "upvotes": 18,
                "downvotes": 0,
                "date": "2018-02-14 10:44pm"
              }
            ]
          },
          {
            "title": "So and so gets elected",
            "url": "suchelectionwow",
            "user": "lapubell",
            "score": 132,
            "date": "2018-02-14 10:02pm",
            "content": "Some longform writing content blah blah blah...",
            "type": "blog",
            "tags": [
              {
                "tag": "news",
                "upvotes": 92,
                "downvotes": 0,
                "date": "2018-02-14 10:02pm"
              },
              {
                "tag": "politics",
                "upvotes": 38,
                "downvotes": 0,
                "date": "2018-02-14 10:44pm"
              }
            ]
          },

          ...etc

        ]
      }

